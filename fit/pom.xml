<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>it.connectpa</groupId>
    <artifactId>syncope</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <name>ConnectPA IAM - FIT</name>
  <groupId>it.connectpa</groupId>
  <artifactId>syncope-fit</artifactId>
  <packaging>war</packaging>

  <properties>
    <rootpom.basedir>${basedir}/..</rootpom.basedir>
    <exec.skip>true</exec.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    
    <dependency>
      <groupId>it.connectpa</groupId>
      <artifactId>syncope-core</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>it.connectpa</groupId>
      <artifactId>syncope-console</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>it.connectpa</groupId>
      <artifactId>syncope-wa</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>fit</finalName>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <inherited>false</inherited>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
        <executions>
          <execution>
            <id>default-war</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>addFlowableTestContent</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                         classpathref="maven.plugin.classpath"/>

                <if>
                  <not>
                    <available file="../core/target/test-classes/backup/MasterContent.xml"/>
                  </not>
                  <then>
                    <mkdir dir="../core/target/test-classes/backup"/>
                    <copy file="../core/target/test-classes/domains/MasterContent.xml" 
                          todir="../core/target/test-classes/backup"/>
                  </then>
                </if>
                <if>
                  <available file="../core/target/syncope/WEB-INF/lib/flowable-engine-${flowable.version}.jar"/>
                  <then>
                    <xslt basedir="../core/target/test-classes/backup" 
                          includes="MasterContent.xml"
                          destdir="../core/target/test-classes/domains"
                          extension=".xml"
                          force="true"
                          style="../core/src/test/resources/addFlowableToContent.xsl"/>
                  </then>
                </if>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>setupEmbeddedConf</id>
            <phase>package</phase>
            <configuration>
              <target>
                <delete dir="../core/target/syncope/WEB-INF/classes/domains"/>
                <copy todir="../core/target/syncope/WEB-INF/classes/domains">
                  <fileset dir="../core/target/test-classes/domains"/>
                </copy>
                <copy file="../core/target/test-classes/connid.properties" 
                      todir="../core/target/syncope/WEB-INF/classes" 
                      overwrite="true"/>
                <copy file="../core/target/test-classes/keymaster.properties" 
                      todir="../core/target/syncope/WEB-INF/classes" 
                      overwrite="true"/>

                <copy file="../console/target/test-classes/keymaster.properties" 
                      todir="../console/target/syncope-console/WEB-INF/classes" 
                      overwrite="true"/>

                <copy file="../wa/target/test-classes/keymaster.properties" 
                      todir="../wa/target/syncope-wa/WEB-INF/classes" 
                      overwrite="true"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>20020829</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven3-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <container>
            <containerId>tomcat9x</containerId>
            <zipUrlInstaller>
              <url>https://repo1.maven.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip</url>
              <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>
              <extractDir>${project.build.directory}/cargo/extract</extractDir>
            </zipUrlInstaller>
            <dependencies>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
              </dependency>
            </dependencies>
            <timeout>300000</timeout>
            <log>${cargo.log}</log>
            <output>${cargo.output}</output> 
          </container>
          <configuration>
            <properties>
              <cargo.jvmargs>
                -Dspring.profiles.active=embedded
                -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>
            </properties>
          </configuration>
          <deployables>
            <deployable>
              <location>../core/target/syncope</location>
              <properties>
                <context>syncope</context>
              </properties>
            </deployable>
            <deployable>
              <location>../console/target/syncope-console</location>
              <properties>
                <context>syncope-console</context>
              </properties>
            </deployable>
            <deployable>
              <location>../wa/target/syncope-wa</location>
              <properties>
                <context>syncope-wa</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <name>postgres:${docker.postgresql.version}</name>
              <run>
                <env>
                  <POSTGRES_DB>syncope</POSTGRES_DB>
                  <POSTGRES_USER>syncope</POSTGRES_USER>
                  <POSTGRES_PASSWORD>syncope</POSTGRES_PASSWORD>
                </env>
                <ports>
                  <port>5432:5432</port>
                </ports>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-docker</id>
            <phase>initialize</phase>
            <goals>
              <goal>stop</goal>
              <goal>remove</goal>
              <goal>volume-remove</goal>
              <goal>build</goal>
            </goals>
          </execution>
          <execution> 
            <id>start-docker</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-docker</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
              <goal>remove</goal>
              <goal>volume-remove</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins> 
  </build>
  
  <profiles>
    <profile>
      <id>debug</id>

      <properties>
        <exec.skip>false</exec.skip>
      </properties>

      <build>
        <defaultGoal>clean package io.fabric8:docker-maven-plugin:build io.fabric8:docker-maven-plugin:start cargo:run</defaultGoal>
      </build>
    </profile>
  </profiles>
</project>
